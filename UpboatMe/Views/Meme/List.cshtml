@model System.Collections.Generic.List<UpboatMe.Models.Meme>

@{
    ViewBag.Title = "List";
}

@using (Html.BeginForm("List", "Meme", FormMethod.Get))
{
<div class="row collapse">    
    <div class="large-10 columns" style="padding-right:5px">
        <input type="text" id="query" name="query" placeholder="search for a meme" value="@Request.QueryString["query"]"/>
    </div>
    <div class="large-2 columns">
        <input type="submit" value="Search" class="postfix small button middle"/>
    </div>   
</div>
}

<div class="row">
    <div class="large-12 columns newspaper">

        @foreach (var meme in Model)
        {
            <div class="panel">
                <h5>@Html.ActionLink(meme.Description, "Make", "Meme", new { name = meme.Aliases[0], top = "top-line", bottom = "bottom-line" }, null)
                    <small>aka 
                        @for (var i = 0; i < meme.Aliases.Count; ++i)
                        {
                            var alias = meme.Aliases[i];
                            @(i==0?"":", ")@Html.ActionLink(alias, "Make", "Meme", new { name = alias, top = "top-line", bottom = "bottom-line" }, null);
                        }
                    </small>
                </h5>
            </div>
        }

        @if (!Model.Any())
        {
            <em>No matches found - try again!</em>
        }
    </div>
</div>
